// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Personalized recommendation AI agent.
 *
 * - providePersonalizedRecommendations - A function that provides personalized recommendations based on mood tracking data and user input.
 * - PersonalizedRecommendationsInput - The input type for the providePersonalizedRecommendations function.
 * - PersonalizedRecommendationsOutput - The return type for the providePersonalizedRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PersonalizedRecommendationsInputSchema = z.object({
  moodData: z
    .string()
    .describe(
      'The user mood tracking data, as a JSON string. Include date and mood level.'
    ),
  userInput: z.string().describe('The user input, describing their concerns.'),
});
export type PersonalizedRecommendationsInput = z.infer<
  typeof PersonalizedRecommendationsInputSchema
>;

const PersonalizedRecommendationsOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('Personalized recommendations for resources and exercises.'),
});
export type PersonalizedRecommendationsOutput = z.infer<
  typeof PersonalizedRecommendationsOutputSchema
>;

export async function providePersonalizedRecommendations(
  input: PersonalizedRecommendationsInput
): Promise<PersonalizedRecommendationsOutput> {
  return providePersonalizedRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalizedRecommendationsPrompt',
  input: {schema: PersonalizedRecommendationsInputSchema},
  output: {schema: PersonalizedRecommendationsOutputSchema},
  prompt: `You are a mental health expert providing personalized recommendations.

  Based on the user's mood data:
  {{moodData}}

  And user input:
  {{userInput}}

  Provide personalized recommendations for resources and exercises that may be helpful to the user.
  Consider resources like support groups, therapists, relaxation exercises, and journaling prompts.
`,
});

const providePersonalizedRecommendationsFlow = ai.defineFlow(
  {
    name: 'providePersonalizedRecommendationsFlow',
    inputSchema: PersonalizedRecommendationsInputSchema,
    outputSchema: PersonalizedRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
